syntax = "proto3";
package allocation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/peggyjv/sommelier/x/allocation/types";

// AllocationPrecommit defines an array of hashed data to be used for the precommit phase
// of allocation
message AllocationPrecommit {
  bytes  hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
  string cellar_id = 2;
}

// Allocation is the XXX
message Allocation {
  string              cellar_id = 1;
  string               fee_level = 2 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  TickWeights tick_weights = 3;
  string salt = 4;
}

// TickWeight is the weighted Tick value
message TickWeight {
  Tick  tick = 1;
  string weight = 2 [
    (gogoproto.jsontag) = "weight",
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// TickWeights is a struct for holding a collection of TickWeight
message TickWeights {
  repeated TickWeight weights = 1;
}

// Tick is the metadata for an instance of token data
message Tick {
  uint64 min = 1;
  uint64 max = 2;
}

// Cellar is a collection of pools for a token pair
message Cellar {
  string        cellar_id = 1;
  string        token0 = 2;
  string       token1 = 3;
  repeated Pool pool = 4;
}

// Pool collects tick information
message Pool {
  string         fee_level = 1 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated Tick tick_ranges = 2;
}