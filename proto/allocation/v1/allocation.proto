syntax = "proto3";
package allocation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/peggyjv/sommelier/x/allocation/types";

// AllocationPrecommit defines an array of hashed data to be used for the precommit phase
// of allocation
message AllocationPrecommit {
  bytes  hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
  string cellar_id = 2;
}

// Allocation is the commit for all allocations for a cellar by a validator
message Allocation {
  string cellar_id = 1;
  PoolAllocations pool_allocations = 2;
  string salt = 3;
}

// PoolAllocation is the allocation of weights within a fee level on a cellar
message PoolAllocation {
  string               fee_level = 1 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  TickWeights tick_weights = 2;
}

// PoolAllocations is a struct containing a collection of PoolAllocation
message PoolAllocations {
  repeated PoolAllocation allocations = 1;
}


// TickWeight is the weighted Tick value
message TickWeight {
  uint32 tick = 1;
  string weight = 2 [
    (gogoproto.jsontag) = "weight",
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// TickWeights is a struct for holding a collection of TickWeight
message TickWeights {
  repeated TickWeight weights = 1;
}


////////////
// Params //
////////////

// Cellar is a collection of pools for a token pair
message Cellar {
  string        cellar_id = 1;
  repeated Pool pool = 2;
}

// Pool collects tick information
message Pool {
  string         fee_level = 1 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated uint32 tick_ranges = 2;
}