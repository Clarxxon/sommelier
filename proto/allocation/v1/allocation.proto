syntax = "proto3";
package allocation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/peggyjv/sommelier/x/allocation/types";

// OracleFeed represents an array of oracle data that is  
message OracleFeed {
  repeated UniswapPair data = 1 [(gogoproto.jsontag) = "pairs"];
}

// UniswapPair represents an SDK compatible uniswap pair info fetched from The Graph.
message UniswapPair {
  string   id = 1 [(gogoproto.customname) = "ID"];
  string reserve0 = 2 [
    (gogoproto.jsontag) = "reserve0",
    (gogoproto.moretags) = "yaml:\"reserve0\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string reserve1 = 3 [
    (gogoproto.jsontag) = "reserve1",
    (gogoproto.moretags) = "yaml:\"reserve1\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string reserve_usd = 4 [
    (gogoproto.customname) = "ReserveUSD",
    (gogoproto.moretags) = "yaml:\"reserveUSD\"",
    (gogoproto.jsontag) = "reserveUSD",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  UniswapToken  token0 = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "token0"
  ];
  UniswapToken  token1 = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "token1"
  ];
  string token0_price = 7 [
    (gogoproto.jsontag) = "token0Price",
    (gogoproto.moretags) = "yaml:\"token0Price\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string token1_price = 8 [
    (gogoproto.jsontag) = "token1Price",
    (gogoproto.moretags) = "yaml:\"token1Price\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string total_supply = 9 [
    (gogoproto.jsontag) = "totalSupply",
    (gogoproto.moretags) = "yaml:\"totalSupply\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// UniswapToken is the returned uniswap token representation
message UniswapToken {
  // token address
  string id = 1 [(gogoproto.customname) = "ID"];
  // number of decimal positions of the pair token
  uint64 decimals = 2;
}


// AllocationPrecommit defines an array of hashed data to be used for the precommit phase
// of allocation
message AllocationPrecommit {
  bytes hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
}

// Allocation is the XXX
message Allocation {
  string              cellar_id = 1;
  string               fee_level = 2 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated TickWeight tick_weights = 3;
}

// TickWeight is the weighted Tick value
message TickWeight {
  Tick  tick = 1;
  string weight = 2 [
    (gogoproto.jsontag) = "weight",
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Tick is the metadata for an instance of token data
message Tick {
  uint64 min = 1;
  uint64 max = 2;
}

// Cellar is a collection of pools for a token pair
message Cellar {
  string        cellar_id = 1;
  string        token0 = 2;
  string       token1 = 3;
  repeated Pool pool = 4;
}

// Pool collects tick information
message Pool {
  string         fee_level = 1 [
    (gogoproto.jsontag) = "feeLevel",
    (gogoproto.moretags) = "yaml:\"feeLevel\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated Tick tick_ranges = 2;
}